---
# Populate crs with environment variables
  - name: Template cluster.yaml
    template:
      src: "{{ CRS_PATH }}/cluster.yaml"
      dest: "/tmp/cluster.yaml"

  - name: Template Ubuntu machine crs
    block:
      - name: Template controlplane_ubuntu.yaml
        template:
          src: "{{ CRS_PATH }}/controlplane_ubuntu.yaml"
          dest: "/tmp/controlplane_ubuntu.yaml"

      - name: Template workers_ubuntu.yaml
        template:
          src: "{{ CRS_PATH }}/workers_ubuntu.yaml"
          dest: "/tmp/workers_ubuntu.yaml"
    when: IMAGE_OS == "Ubuntu"

  - name: Template CentOS machine crs
    block:
      - name: Template controlplane_centos.yaml
        template:
          src: "{{ CRS_PATH }}/controlplane_centos.yaml"
          dest: "/tmp/controlplane_centos.yaml"
        vars:
          IMAGE_NAME: '{{ IMAGE_NAME_CENTOS }}'
          IMAGE_LOCATION: '{{ IMAGE_LOCATION_CENTOS }}'
          IMAGE_USERNAME: '{{ IMAGE_USERNAME_CENTOS }}'

      - name: Template workers_centos.yaml
        template:
          src: "{{ CRS_PATH }}/workers_centos.yaml"
          dest: "/tmp/workers_centos.yaml"
        vars:
          IMAGE_NAME: '{{ IMAGE_NAME_CENTOS }}'
          IMAGE_LOCATION: '{{ IMAGE_LOCATION_CENTOS }}'
          IMAGE_USERNAME: '{{ IMAGE_USERNAME_CENTOS }}'
    when: (IMAGE_OS == "Centos") or
          (IMAGE_OS == "")

  - name: Install openshift client
    pip:
      executable: "pip3"
      name: openshift
      state: present
    become: true
    become_user: root
    when: ansible_facts['distribution'] == "CentOS"

  - name: Switch Ansible's Python interpreter to Python 3
    set_fact:
      ansible_python_interpreter: /usr/bin/python3

# Provision cluster & machines
  - name: Provision cluster
    k8s:
      state: present
      src: "/tmp/cluster.yaml"
      namespace: "{{ NAMESPACE }}"
    register: provision_cluster

  - name: Create Ubuntu machines
    k8s:
      state: present
      src: "/tmp/{{ item }}_ubuntu.yaml"
      namespace: "{{ NAMESPACE }}"
    loop:
      - controlplane
      - workers
    register: ubuntu_machines
    when: IMAGE_OS == "Ubuntu"

  - name: Create CentOS machines
    k8s:
      state: present
      src: "/tmp/{{ item }}_centos.yaml"
      namespace: "{{ NAMESPACE }}"
    loop:
      - controlplane
      - workers
    register: centos_machines
    when: (IMAGE_OS == "Centos") or
          (IMAGE_OS == "")
